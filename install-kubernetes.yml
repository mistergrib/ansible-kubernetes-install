---
- hosts: kubernetes
  become: true
  tasks:
 
  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: changing /ets/fstab
    command: sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
  
  - block:    #==================DEBIAN BLOCK======================
  
      - name: install updates
        apt:
          upgrade: dist
          update_cache: yes

      - name: Install docker engine prerequisites for Debian
        apt:
          name: "{{ packages }}"
          state: present
          update_cache: yes
        vars:
          packages:
          - ca-certificates
          - curl
          - gnupg
    

      - name: create keyring dir and set permissions for Debian
        command: install -m 0755 -d /etc/apt/keyrings
    
      - name: Download Docker GPG key for Debian
        shell: curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker_temp.gpg
        register: download_result
        ignore_errors: yes
    
      - name: Import Docker GPG key for Debian
        shell: gpg --yes --dearmor -o /etc/apt/keyrings/docker.gpg /etc/apt/keyrings/docker_temp.gpg
        when: download_result is succeeded
        ignore_errors: yes
    
      - name: Change permissions for Docker GPG key for Debian
        command: chmod a+r /etc/apt/keyrings/docker.gpg
    
      - name: Add apt repository for docker (Debian)
        shell: |
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian $(. /etc/os-release && echo $VERSION_CODENAME) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    
      - name: Install docker and its dependecies
        apt: 
          name: "{{ packages }}"
          state: present
          update_cache: yes
        vars:
          packages:
          - docker-ce 
          - docker-ce-cli 
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
    
      - name: Install kubernetes prerequisites
        apt:
          name: "{{ packages }}"
          state: present
          update_cache: yes
        vars:
          packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - gpg  
    
      - name: install public signing key for kubernetes
        shell: curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key -o /etc/apt/keyrings/kuber_temp.gpg
        register: download_kuber_result
        ignore_errors: yes
    
      - name: Import Kuber GPG key
        shell: gpg --yes --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg /etc/apt/keyrings/kuber_temp.gpg
        when: download_kuber_result is succeeded
        ignore_errors: yes
    
      - name: add kubernetes apt repo
        shell: |
          echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list
    
      - name: Install kubernetes 
        apt:
          name: "{{ packages }}"
          state: present
          update_cache: yes
        vars:
          packages:
          - kubelet
          - kubeadm
          - kubectl
    
      - name: apt hold kuber
        command: apt-mark hold kubelet kubeadm kubectl
    
    when: ansible_os_family == "Debian"

  - block:    #=====================RedHat BLOCK=======================
      
      - name: install the yum-config-manager
        dnf:
          name: yum-utils
          state: latest

      - name: install docker repo
        shell: sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

      - name: install Docker
        dnf:
          name: "{{ packages }}"
          state: latest
        vars: 
          packages:
          - docker-ce 
          - docker-ce-cli 
          - containerd.io 
          - docker-buildx-plugin 
          - docker-compose-plugin

      - name: enable docker services
        shell: systemctl enable docker.service && systemctl enable containerd.service

      - name: disable SElinux
        shell: sudo setenforce 0 && sudo sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

      - name: add Kubernetes repo
        shell: |
          cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
          [kubernetes]
          name=Kubernetes
          baseurl=https://pkgs.k8s.io/core:/stable:/v1.28/rpm/
          enabled=1
          gpgcheck=1
          gpgkey=https://pkgs.k8s.io/core:/stable:/v1.28/rpm/repodata/repomd.xml.key
          exclude=kubelet kubeadm kubectl cri-tools kubernetes-cni
          EOF
          
      - name: install kubernetes services
        dnf:
          name: "{{ packages }}"
          state: present
          disable_excludes: kubernetes
        vars: 
          packages:
          - kubelet 
          - kubeadm 
          - kubectl

      - name: enable kubernetes service
        shell: sudo systemctl enable --now kubelet 

    when: ansible_os_family == "RedHat"
